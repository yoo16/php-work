<div class="hero-unit">

  <h1>MVC on php-work</h1>
  <p class="text-danger">
    *Currently, only PostgreSQL
  </p>
  <h2>Model</h2>
  <div class="alert alert-success">
    <ul>
      <li>M is Model.</li>
      <li>Model file is possible O/R mapping with vo file.</li>
      <li>vo fil is O/R mapping file on Database table.</li>
      <li>vo file path is 'app/models/vo/xxxx.php'.</li>
      <li>If you need use O/R mapping with DB, Model file must inherit vo file.</li>
      <li>vo file must inherit 'PwEntity.php'.</li>
      <li>You need define the vo file with table's attributes.</li>
      <li>If you use 'DB' class library in php-work, you can control the model.</li>
    </ul>
  </div>
</div>

<div>
  <h2>Sample 1.</h2>
  <div>
    <dl>
      <dt>Model file</dt>
      <dd>Country.php </dd>
      <dt>Table</dt>
      <dd>countries</dd>
    </dl>
  </div>
  <h3>(1) Prepare database(current only PostgreSQL),</h3>
  <div>
    <h4>createdb</h4>
    <pre>
    postgres$ createdb sample
    </pre>
  </div>
  <h3>(2) Create setting file for access Database.</h3>
  <p>
    PostgreSQL setting file'name is same server hostname.
    <br> You confirm hostname, for example using shell command 'hostname',
  </p>
  <div>
    <h4>hostname</h4>
    <pre>
    $ hostname
    debian
    </pre>
    <h4>app/settings/pgsql/'hostname'.php</h4>
    <p>Create database(current only PostgreSQL).</p>
    ex) app/settings/pgsql/debian.php
    <pre>
    define('DB_NAME', 'sample');    //Database name
    define('DB_HOST', 'localhost'); //Database hostname *default localhost
    define('DB_USER', 'postgres');  //Database user *default postgres
    define('DB_PORT', '5432');      //Database host *default 5432
    </pre>
  </div>

  <h3>(3) Create model file.</h3>
  <div>
    ex) app/models/Country.php
    <pre>
    require_once 'models/vo/_Country.php';

    class Country extends _Country {
    
    }
    </pre>
  </div>
  <h3>(4) Create O/R mapping file(vo file).</h3>
  <div>
    <p>
      If you define table attributes(table name, columns and more) for Database, you access and manage Database.
    </p>
    ex) app/models/vo/_Country.php
    <pre>
    require_once 'PwEntity.php';

    class _Country extends PwEntity {
    
        public $id_column = 'id';         //primary id column *default id
        public $name = 'countries';       //default table name
        public $entity_name = 'country';  //entity name
    
        //talbe columns 
        public $columns = array(
            'created_at' => array('type' => 'timestamp'),
            'name' => array('type' => 'varchar', 'length' => 256, 'is_required' => true),
            'sort_order' => array('type' => 'int4'),
            'updated_at' => array('type' => 'timestamp'),
        );
    
        //primary key name
        public $primary_key = 'countries_pkey';
    
        //constraint information
        public $unique = array(
                'countries_name_key' => [
                            'name',
                            ],
        );
    }
    </pre>
    <p>
      <ul>
        <li>
          You can genrate automatically using 'project-manager'.<br>
          <a href="https://github.com/yoo16/project-manager" target="_blank">https://github.com/yoo16/project-manager</a>
        </li>
      </ul>
    </p>
    <div>

    </div>
  </div>

  <h3>(5) Execute 'create table' or 'alter table' by model file.</h3>
  <div>
    <p>
      using 'scripts/sql/check_schema_from_model.php', you can query 'create table' by model vo file's attributes.
    </p>
    <h4>check_schema_from_model.php param1 param2</h4>
    <ul>
      <li>*param1 : execute query: '' or 1</li>
      <li>*param2 : hostname</li>
    </ul>
    <pre>
    $ php check_schema_from_model.php 1 localhost

    --- Mode: Do not excute SQL ---
    host: localhost
    ---- Not Found table ----
    _Country
    countries
    CREATE TABLE IF NOT EXISTS "countries" (
    id SERIAL PRIMARY KEY NOT NULL
    , created_at TIMESTAMP
    , name VARCHAR(256) NOT NULL
    , sort_order INT4
    , updated_at TIMESTAMP
    );
    
    ALTER TABLE countries
          ADD CONSTRAINT countries_name_key
          UNIQUE (name);
  </pre>
  </div>

  <h3>(6) Export Database SQL file.</h3>
  <div>
    <p>
      using 'scripts/sql/create_sql_from_model.php', export Database SQL to db/sql/create.sql
    </p>
    <h4>create_sql_from_model.php</h4>
    <pre>
    $ php check_schema_from_model.php 1 localhost

    --- Mode: Do not excute SQL ---
    host: localhost
    ---- Not Found table ----
    _Country
    countries
    CREATE TABLE IF NOT EXISTS "countries" (
    id SERIAL PRIMARY KEY NOT NULL
    , created_at TIMESTAMP
    , name VARCHAR(256) NOT NULL
    , sort_order INT4
    , updated_at TIMESTAMP
    );
    
    ALTER TABLE countries
          ADD CONSTRAINT countries_name_key
          UNIQUE (name);
  </pre>
  </div>

  <h2>Controller</h2>
  <div class="alert alert-success">
    <ul>
      <li>C is Controller.</li>
      <li>Controller file is necessary extends 'Controller.php'.</li>
      <li>Controller file control Model file and View file.</li>
      <li>Controller file determines url and processes it.</li>
      <li>It is usually better to inherit 'AppController.php' for controller files using global controller's function.</li>
    </ul>
  </div>
  <h2>URL : http://domain/(1) controller name/(2) method name/(3)id?(4)url_paramater.</h2>
  <h2>Sample 1.</h2>
  <div>
    http://domain/country/edit/1?name=Japan.
  </div>
  <h3>(1) controller name is 'country'.</h3>
  <div>
    <pre>
    require_once 'AppController.php';

    class CountryController extends AppController {
      
    }
    </pre>
  </div>
  <h3>(2) method name is 'edit'</h3>
  <div>
    <pre>
    function edit() {

    }
    </pre>
  </div>
  <h3>(3) 'id' is taked by http query $this->pw_params['id']</h3>
  <div>
    <pre>
    function edit() {
        $this->country = DB::table('Country')->fetch($this->pw_params['id']);
        var_export($this->country->value);

        //$this->pw_params['id'] = 1
        //this method is SQL => SELECT * FROM countries WHERE id = 1;'
    }
    </pre>
  </div>
  <h2>Sample 2.</h2>
  <div>
    http://domain/country/search/?name=Japan.
  </div>
  <h3>(4) 'url params (GET)' is taked $this->pw_params[xxxx]</h3>
  <div>
    <pre>
    function search() {
        $this->country = DB::table('Country')->where('name', $this->pw_params['name'])->all();
        var_export($this->country->values);

        //$this->pw_params['name'] = Japan
        //this method means SQL => SELECT * FROM countries WHERE name = 'Japan';
    }
    </pre>
  </div>
</div>

<div class="alert alert-success">
  <ul>
    <li>V is View.</li>
    <li>View is renderd using instance in contoller.</li>
    <li>View file name is usually the same method name in controller.</li>
    <li>View file is in app/views/controller_name/xxxx.phtml</li>
    <li>HTML layout is in app/views/layouts/xxxx.phtml.</li>
    <li>HTML layout file name is setting by instance '$layout' in controller.</li>
    <li>View file render as child view by '$this->content_for_layout' of layout.</li>
  </ul>
</div>
<h2>Sample 1.</h2>
<div>
  Country.php
</div>
<h3>(1) layout name.</h3>
<div>
  <pre>
    require_once 'AppController.php';

    class CountryController extends AppController {
        var $layout = 'sample';
        //file path : app/views/layouts/sample.phtml
    
    }
    </pre>
</div>

<h3>(2) render file is 'method name.phtml'.</h3>
<div>
  <pre>
    require_once 'AppController.php';

    class CountryController extends AppController {
        var $layout = 'sample';

        function edit() {
            //app/views/country/edit.phtml
            $this->country = DB::table('Country')->fetch($this->pw_params['id']);
        }
    
    }
    </pre>
</div>

<h3>(3) write coding and display layout file</h3>
<div>
  <pre>
    <?= htmlspecialchars("
      <html lang=\"ja\">
        <head>
          <? include('components/meta.phtml') ?>
          <? include('components/stylesheet.phtml') ?>
          <? include('components/javascript.phtml') ?>
        </head>
        <body>
        
          <div class=\"nav\">
            <div class=\"container\">
              <div class=\"navbar-header\">
                <a class=\"navbar-brand\" href=\"<?= \$this->base ?>\"><?= APP_NAME ?></a>
              </div>
              <nav class=\"nav nav-pills flex-column flex-sm-row\">
        
              </nav>
            </div>
          </div>
        
          <div class=\"container\">
        
            <?= \$this->content_for_layout ?>
        
          </div>
        
        </body>
      </html>
    ") ?>
    </pre>
</div>

<h3>(4) write coding and display in 'edit.phtml'</h3>
<div>
  <pre>
    <?= htmlspecialchars("
      <div>
        <form action=\"<?= \$this->urlFor('country', 'update', \$this->country->value['id']) ?>\" method=\"post\">
        id : <?= \$this->country->value['id'] ?>
        <?= \$this->country->formInput('name') ?>
        <?= PwForm::submit(LABEL_SAVE) ?>
        </form>
      </div>
    ") ?>
    </pre>

  <h4>result</h4>
  <div>
    <form action="<?= $this->urlFor('country', 'update', $this->country->value['id']) ?>" method="post">
      id :
      <?= $this->country->value['id'] ?>
      <?= $this->country->formInput('name', ['class' => 'form-control']) ?>
      <?= PwForm::submit(LABEL_SAVE) ?>
    </form>
  </div>
</div>